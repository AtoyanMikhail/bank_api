syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_verify_email.proto";
import "rpc_create_account.proto";
import "rpc_get_account.proto";
import "rpc_list_accounts.proto";
import "rpc_create_transfer.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/AtoyanMikhail/bank_api/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Basic Bank API";
    version: "1.0";
    description: "A comprehensive banking API for managing users, accounts, and transfers";
    contact: {
      name: "mikhail";
      url: "github.com/AtoyanMikhail/bank_api/pb";
      email: "mikhail.atoyan@gmail.com";
    };
  };
  schemes: HTTPS;
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  tags: [
    {
      name: "Users";
      description: "User management operations";
    },
    {
      name: "Accounts";
      description: "Account management operations";
    },
    {
      name: "Transfers";
      description: "Money transfer operations";
    }
  ];
  security_definitions: {
    security: {
      key: "Bearer";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
        description: "Bearer token authentication";
      }
    }
  }
};

service BasicBank {
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/create_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Users";
      description: "Create a new user account with username, email, and password. No authentication required.";
      summary: "Create User";
      responses: {
        key: "200";
        value: {
          description: "User created successfully";
        }
      }
      responses: {
        key: "400";
        value: {
          description: "Invalid request parameters";
        }
      }
    };
  }

  rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
    option (google.api.http) = {
      post: "/v1/login_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Users";
      description: "Authenticate user and receive access & refresh tokens";
      summary: "Login User";
      responses: {
        key: "200";
        value: {
          description: "Login successful";
        }
      }
    };
  }

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/update_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Users";
      description: "Update user information. Requires authentication.";
      summary: "Update User";
      security: {
        security_requirement: {
          key: "Bearer";
          value: {};
        }
      }
    };
  }

  rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
    option (google.api.http) = {
      get: "/v1/verify_email"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Users";
      description: "Verify user's email address using verification code";
      summary: "Verify Email";
    };
  }

  rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse) {
    option (google.api.http) = {
      post: "/v1/accounts"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Accounts";
      description: "Create a new bank account with specified currency. Requires authentication.";
      summary: "Create Account";
      security: {
        security_requirement: {
          key: "Bearer";
          value: {};
        }
      }
    };
  }

  rpc GetAccount (GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http) = {
      get: "/v1/accounts/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Accounts";
      description: "Get account details by ID. Only account owner can access.";
      summary: "Get Account";
      security: {
        security_requirement: {
          key: "Bearer";
          value: {};
        }
      }
    };
  }

  rpc ListAccounts (ListAccountsRequest) returns (ListAccountsResponse) {
    option (google.api.http) = {
      get: "/v1/accounts"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Accounts";
      description: "List user's accounts with pagination";
      summary: "List Accounts";
      security: {
        security_requirement: {
          key: "Bearer";
          value: {};
        }
      }
    };
  }

  rpc CreateTransfer (CreateTransferRequest) returns (CreateTransferResponse) {
    option (google.api.http) = {
      post: "/v1/transfers"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Transfers";
      description: "Transfer money between accounts. Both accounts must have same currency.";
      summary: "Create Transfer";
      security: {
        security_requirement: {
          key: "Bearer";
          value: {};
        }
      }
    };
  }
}